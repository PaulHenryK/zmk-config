/*
 * Copyright (c) 2020 The ZMK Contributors
 * PHK
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
    quick_tap_ms = <150>;
    retro-tap;
};

 / {
    combos {
        compatible = "zmk,combos";
        combo_ent {
            timeout-ms = <50>;
            key-positions = <3 6>;
            bindings = <&kp ENTER>;
        };
        combo_tab {
            timeout-ms = <50>;
            key-positions = <2 7>;
            bindings = <&kp ENTER>;
        };
        combo_quote {
            timeout-ms = <50>;
            key-positions = <14 15>;
            bindings = <&kp SQT>;
        };
        combo_ques {
            timeout-ms = <50>;
            key-positions = <23 26>;
            bindings = <&kp QUESTION>;
        };
        combo_dquote {
            timeout-ms = <50>;
            key-positions = <22 26>;
            bindings = <&kp DQT>;
        };
        combo_col {
            timeout-ms = <50>;
            key-positions = <4 5>;
            bindings = <&kp COLON>;
        };
        combo_unds {
            timeout-ms = <50>;
            key-positions = <24 25>;
            bindings = <&kp UNDER>;
        };
        combo_mins {
            timeout-ms = <50>;
            key-positions = <13 16>;
            bindings = <&kp MINUS>; 
        };
    };
};

/ {

keymap {
                compatible = "zmk,keymap";

                default_layer {
                
                        bindings = <
   &kp Q &kp W &kp F &kp P &kp B   &kp J &kp L  &kp U     &kp Y   &kp SEMI
   &mt LCTRL A &mt LALT R &mt LGUI S &mt LSHIFT T &kp G   &kp M &mt RSHIFT N  &mt RGUI E &mt RALT I &mt RCTRL O
   &kp X &kp C &kp D &kp V &kp Z   &kp K &kp H  &kp COMMA &kp DOT &kp FSLH
          &kp LGUI &lt 2 ESC &kp BSPC &kp SPACE &lt 1 ENTER &kp RALT
                        >;
                };

                lower_layer {

                        bindings = <
   &kp N1   &kp N2   &kp N3   &kp N4    &kp N5    &kp N6   &kp N7    &kp N8   &kp N9    &kp N0
   &kp LBKT &kp RBKT &kp LBRC &kp RBRC  &kp ENTER   &kp BSPC &kp LPAR  &kp RPAR &kp UNDER &kp EQUAL
   &trans   &trans   &kp BSLH &kp TILDE &kp MINUS &kp PLUS &kp GRAVE &kp PIPE &trans    &trans
                     &trans &trans &trans &trans &trans &trans
                        >;
                };
                
                raise_layer {

                        bindings = <
   &kp C_VOL_DN &kp C_VOL_UP  &kp C_MUTE    &kp C_PP  &trans        &kp C_AC_CUT   &trans   &trans    &trans    &trans
   &bt BT_CLR     &kp C_AC_UNDO &kp C_AC_REDO &kp TAB   &kp C_AC_COPY &kp C_AC_PASTE &trans   &kp UP    &trans    &trans
   &bt BT_NXT    &trans    &bootloader        &reset    &kp CAPS        &trans         &kp LEFT &kp DOWN  &kp RIGHT &trans
                              &trans        &trans    &trans        &trans         &trans   &trans
                        >;
                };    
        };
};
